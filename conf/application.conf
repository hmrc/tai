# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~
include "backend.conf"

appName = tai

http-verbs.retries.ssl-engine-closed-already.enabled = true

# ~~~~
# Additional play modules used can be added here
play.modules.enabled += "uk.gov.hmrc.tai.modules.LocalGuiceModule"

# Provides an implementation of AuthConnector.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"

# Json error handler
# ~~~~
# Default JsonErrorHandler which handles errors by producing JSON document with error details
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

play.modules.enabled += "uk.gov.hmrc.internalauth.client.modules.InternalAuthModule"

#Mongo-Db Config
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"
tai.cache.expiryInSeconds = 900
tai.cache.updateIncome.expiryInSeconds = 172800
tai.cache.expiry = 300

# Key for JSON encryption
# ~~~
# Used in persistence of JSON data to MongoDB
json.encryption {
  key = "someLocalEncryptionKey==" # overwritten by platform-specific encryption keys
  previousKeys = []
}

# Session configuration
# ~~~~~
application.session.httpOnly = false

application.session.secure = false

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Feature toggles
# ~~~~~

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
play.http.router = prod.Routes


tai {
  des {
    call = false
    update.call = false
  }
  confirmedAPI.enabled = false
  cacheMetrics.enabled = true
}

cache {
isEnabled = true
}

mongo.encryption.enabled = false

mongodb {
uri = "mongodb://localhost:27017/tai"
}

auto-update-pay {
enabled = true
}

nps-update-source {
enabled = false
}
nps-post-calc {
enabled = false
}

throttle {
limit = 5
}

microservice {

    services {
      timeout = 5 seconds

      delay-response = 2 seconds

      protocol = http

      auth {
        host = localhost
        port = 8500
      }

      citizen-details {
        host = localhost
        port = 9337
      }

      datastream {
        host = localhost
        port = 8100
      }

      file-upload {
        host = localhost
        port = 9332
        callbackUrl = "http://localhost:9331/tai/file-upload/callback"
        intervalMs = 30
        maxAttempts = 10
      }

      file-upload-frontend {
        host = localhost
        port = 9332
      }

      pertax {
        protocol = "http"
        host = "localhost"
        port = 9132
      }

      nps-hod {
        host = 127.0.0.1
        port = 9332
        path = "/nps-hod-service/services/nps"
        originatorId = "local"
      }

      rti-hod {
        host = 127.0.0.1
        port = 9332
        authorizationToken = "Local"
        env = "local"
        originatorId = "local"
      }

      des-hod {
        host = 127.0.0.1
        port = 9332
        authorizationToken = "Local"
        env = "local"
        originatorId = "local"
      }

      if-hod {
        host = 127.0.0.1
        port = 9332
        authorizationToken = "Local"
        env = "local"
        originatorId = "local"
      }

      pdf-generator-service {
        host = localhost
        port = 9332
      }

      paye {
        host = localhost
        port = 9332
      }

      internal-auth {
        resource-type = "ddcn-live-admin-frontend"
        host = localhost
        port = 8470
      }
    }
}
