# Copyright 2018 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

appName = tai

# Define any modules used here
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"
play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"
play.modules.enabled += "uk.gov.hmrc.tai.modules.LocalGuiceModule"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.MicroserviceFilters"

# Provides an implementation of AuthConnector.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

# Json error handler
# ~~~~
# Default JsonErrorHandler which handles errors by producing JSON document with error details
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.http.JsonErrorHandler"

#Mongo-Db Config
cache.expiryInMinutes = 15

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="9aVHyxSjtlsko57XKUYgfrW5CXOA3LmaghplsGWUQlNGuDsUfdbxDkiwBy19KS6M"

# Key for JSON encryption
# ~~~
# Used in persistence of JSON data to MongoDB
json.encryption {
  key = "someLocalEncryptionKey==" # overwritten by platform-specific encryption keys
  previousKeys = []
}

# Session configuration
# ~~~~~
application.session.httpOnly = false

application.session.secure = false

# The application languages
# ~~~~~
application.langs = "en"


# Feature toggles
# ~~~~~
tai.taxCodeChange.enabled = true

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
play.http.router = prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and 
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule. 

controllers {
  uk.gov.hmrc.play.health.AdminController = {
    needsLogging = false
    needsAuditing = false
  }
  com.kenshoo.play.metrics.MetricsController = {
    needsLogging = false
    needsAuditing = false
  }
}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

tai.des.call = false
tai.des.update.call = false

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = false
  enabled = true
}


# Microservice specific config

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

cache {
  isEnabled = true
}

mongo.encryption.enabled = true

mongodb {
  uri = "mongodb://localhost:27017/tai"
}

auto-update-pay {
  enabled = true
}

nps-update-source {
  enabled = false
}
nps-post-calc {
  enabled = false
}

#The day and month when cy+1 should be enabled and it should be in dd/MM format e.g 05/01(5th January)
cy-plus-one {
  #startDayMonth="05/01"
  enabled = false
}

throttle {
  limit = 5
}

microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {
    timeout = 5 seconds

    delay-response = 2 seconds

    protocol = http

    auth {
      host = localhost
      port = 8500
    }

    citizen-details {
      host = localhost
      port = 9337
    }

    datastream {
      host = localhost
      port = 8100
    }

    file-upload {
      host = localhost
      port = 9332
      callbackUrl = "http://localhost:9331/tai/file-upload/callback"
    }

    file-upload-frontend {
      host = localhost
      port = 9332
    }

    nps-hod {
      host = localhost
      port = 9332
      path = /nps-hod-service/services/nps
      originatorId = "local"
    }

    rti-hod {
      host = localhost
      port = 9332
      authorizationToken = "Local"
      env = "local"
      originatorId = "local"
    }

    des-hod {
      host = localhost
      port = 9332
      authorizationToken = "Local"
      env = "local"
    }

    pdf-generator-service {
      host = localhost
      port = 9332
    }

    paye {
      host = localhost
      port = 9332
    }
  }
}
